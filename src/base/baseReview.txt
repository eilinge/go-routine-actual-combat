package main

import "fmt"

func main01() {
	integer := 6
	switch integer {
	case 4:
		fmt.Println("The integer was <= 4")
		// fallthrough
	case 5:
		fmt.Println("The integer was <= 5")
		// fallthrough
	case 6:
		fmt.Println("The integer was <= 6")
		fallthrough
	case 7:
		fmt.Println("The integer was <= 7")
		// fallthrough
	case 8:
		fmt.Println("The integer was <= 8")
		fallthrough
	default:
		fmt.Println("default case")
	}
}

type person struct {
	name string
	age  int
}

//Student  ...
type Student struct {
	person     // 匿名字段
	speciality string
	age        int
}

//Older ...
func Older(p1, p2 person) (person, int) {
	if p1.age < p2.age {
		return p2, p2.age - p1.age
	}
	return p1, p1.age - p2.age
}
func main02() {
	tom := person{"tom", 16}
	var bob person
	bob.name = "bob"
	bob.age = 18

	// paul := person{name: "paul", age: 12}

	older, diff := Older(tom, bob)
	fmt.Printf("the older person is %v, and their age diff %v\n", older.name, diff)

	eilinge := Student{person{"eilinge", 17}, "a winner", 18}
	fmt.Println("your name is:", eilinge.name)
	fmt.Println("your true age is:", eilinge.person.age)
}

type Human struct {
	name  string
	age   int
	phone string
}

type Studenter struct {
	Human
	school string
}

type Employee struct {
	Human
	company string
}

// SayHi ...
func (h *Human) SayHi() {
	fmt.Printf("Hi, I am %s you can call me on %s\n", h.name, h.phone)
}

// SayHi ...
//Employee的method重写Human的method
func (e *Employee) SayHi() {
	fmt.Printf("Hi, I am %s, I work at %s. Call me on %s\n", e.name, e.company, e.phone)
}

func main() {
	// 高级(Studenter),能够直接调用低级(Human)
	mark := Studenter{Human{"mark", 17, "123456"}, "shanghai"}
	sam := Employee{Human{"sam", 18, "12111313"}, "ether"}

	mark.SayHi()
	sam.SayHi()
}
